// --------------------------------

// (START) Global editor code https://codyhouse.co/ds/globals/typography

// --------------------------------

:root {
	// font family
	--font-primary: 'Blinker', sans-serif;

	// font size
	--text-base-size: 1em; // body font-size
	--text-scale-ratio: 1.25; // multiplier used to generate the type scale values ðŸ‘‡

	// line-height
	--body-line-height: 1.625;
	--heading-line-height: 1.1;

	// capital letters - used in combo with the lhCrop mixin
	--font-primary-capital-letter: 1;

	// unit - don't modify unless you want to change the typography unit (e.g., from Em to Rem units)
	--text-unit: 1em; // if not Em units â†’ --text-unit: var(--text-base-size);

	--text-spacing: 0.02em;
}

:root,
* {
	// type scale
	--text-xxs: calc((var(--text-xs) / var(--text-scale-ratio)));
	--text-xs: calc((var(--text-unit) / var(--text-scale-ratio)) / var(--text-scale-ratio));
	--text-sm: calc(var(--text-xs) * var(--text-scale-ratio));
	--text-md: calc(var(--text-sm) * var(--text-scale-ratio));
	--text-lg: calc(var(--text-md) * var(--text-scale-ratio));
	--text-xl: calc(var(--text-lg) * var(--text-scale-ratio));
	--text-xxl: calc(var(--text-xl) * var(--text-scale-ratio));
	--text-xxxl: calc(var(--text-xxl) * var(--text-scale-ratio));
	--text-xxxxl: calc(var(--text-xxxl) * var(--text-scale-ratio));
}

@supports (--css: variables) {
	@include breakpoint(md) {
		:root {
			--text-base-size: 1.15em;
			--text-scale-ratio: 1.25;
		}
	}
}

body {
	color: var(--color-smart-1);
}

p {
	max-width: 70ch;
}

.text-component {
	ul {
		list-style-position: outside;
		padding-left: var(--space-md);
	}
}

.text-center {
	p {
		margin: 0 auto;
	}

	.text-component {
		ul {
			text-align: left;
			display: table;
			margin: auto;
		}
	}
}

h1,
h2,
h3,
h4 {
	font-weight: 600;

	letter-spacing: var(--text-spacing);

	hyphens: auto;

	color: var(--color-progressive);
}

.sub-title {
	font-size: 0.85em;
	display: block;
	font-weight: 400;
}

h1,
.has-border {
	position: relative;
	display: table;

	&:after {
		position: absolute;
		content: "";
		width: var(--space-xl);
		height: var(--space-xxs);
		bottom: calc(var(--space-md) * -1);
		left: calc(var(--space-md) * -1);

		background: var(--color-challenger);
	}
}

// --------------------------------

// (END) Global editor code

// --------------------------------

// link style
a,
.link {
}

strong {
	font-weight: 800;
}

mark {
	background-color: alpha(var(--color-accent), 0.2);
	color: inherit;
}

.text-component {
	--line-height-multiplier: 1;
	--text-vspace-multiplier: 1.25;

	h1,
	h2,
	h3,
	h4 {
		line-height: calc(var(--heading-line-height) * var(--line-height-multiplier, 1));
		margin-bottom: calc(var(--space-unit) * 1.25 * var(--text-vspace-multiplier, 1));
	}

	p {
		margin-bottom: var(--space-md);
	}

	blockquote {
		padding-left: 1em;
		border-left: 4px solid var(--color-contrast-low);
	}

	hr {
		background: var(--color-contrast-low);
		height: 1px;
	}

	figcaption {
		font-size: var(--text-sm);
		color: var(--color-contrast-medium);
	}
}

.article {
	// e.g., blog posts
	--body-line-height: 1.58; // set body line-height
	--text-vspace-multiplier: 1.2; // increase vertical spacing
}

.standing-out-section {
	padding: var(--space-sm);
	border-radius: var(--radius-md);
	border: var(--color-offwhite) solid 1px;
	background-color: var(--color-offwhite-2);

	.standing-out-section__row {
		display: flex;
		justify-content: space-between;
		align-items: baseline;
	}
}

.big-bullet {
	height: var(--space-lg);
	width: var(--space-lg);
	text-align: center;
	color: var(--color-charcoal);
	background: var(--color-restless);
	border-radius: 50%;
	font-weight: bold;
	float: left;
	line-height: calc(var(--space-lg) * 0.95);
	margin: 0 var(--space-md) var(--space-xs) 0;
}

.bullet-list {
	margin: var(--space-sm) var(--space-lg);
	margin-right: 0;
	line-height: 1.4;

	li {
		font-size: var(--text-md);
		position: relative;

		&::before {
			position: absolute;
			content: ' ';
			height: 7px;
			width: 7px;
			border-radius: 100%;
			background-color: var(--color-progressive);
			left: calc(-1 * var(--text-md));
			top: calc(.5 * var(--text-md));
		}
	}
}

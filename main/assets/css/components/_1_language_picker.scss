@use '../base' as *;

/* -------------------------------- 

File#: _1_language-picker
Title: Language Picker
Descr: A custom selector allowing users to choose their preferred language on a page
Usage: codyhouse.co/license

-------------------------------- */
:root {
  --picker-vertical-gap: 4px;
}

.language-picker {
  display: inline-block;
  position: relative;
}

.js .language-picker__form { // if js is enabled we replace the default form with a custom dropdown
  display: none;
}

.language-picker__button { // created in js - dropdown trigger. Pass custom classes using the data-trigger-class attribute of the .language-picker element
  .icon { // dropdown arrow (edit inline SVG in JS file of component)
    height: 16px;
    width: 16px;

    &:first-of-type {
      margin-right: var(--space-xxxs);
    }

    &:last-of-type {
      margin-left: var(--space-xxxs);
    }
  }
}

.language-picker__dropdown { // created in js - dropdown element with list of languages 
  position: absolute;
  left: 0;
  top: 100%;
  width: 200px;
  background-color: var(--color-progressive);
  box-shadow: var(--inner-glow), var(--shadow-md);
  padding: var(--space-xxxs) 0;
  border-radius: var(--radius-md);
  z-index: var(--z-index-popover, 5); 
  margin-top: var(--picker-vertical-gap);
  margin-bottom: var(--picker-vertical-gap);

  // use rem units
  @include spaceUnit(1rem);
  @include textUnit(1rem);

  visibility: hidden;
  opacity: 0;
  transition: visibility 0s .2s, opacity .2s;
}

.language-picker__dropdown--right { // change dropdown position based on the available space
  right: 0;
  left: auto;
}

.language-picker__dropdown--up {
  bottom: 100%;
  top: auto;
}

.language-picker__button[aria-expanded="true"] + .language-picker__dropdown {
  visibility: visible;
  opacity: 1;
  transition: visibility 0s, opacity .2s;
}

.language-picker__item {
  display: flex;
  align-items: center;
  text-decoration: none;
  padding: var(--space-xxs) var(--space-sm);
  color: var(--color-contrast-high);
  transition: background .2s;

  span { // truncate text
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }

  &:hover {
    background-color: alpha(var(--color-contrast-higher), 0.075);
  }

  &:focus {
    outline: none;
    background-color: alpha(var(--color-primary), 0.1);
  }

  &[aria-selected=true] { // selected language
    position: relative;
    background-color: var(--color-primary);
    color: var(--color-white);
    @include fontSmooth;

    &:focus {
      outline: 2px solid alpha(var(--color-primary), 0.2);
    }

    &::after { // check icon next to the selected language
      content: '';
      height: 16px;
      width: 16px;
      background-color: currentColor;
      mask-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3E%3Cpolyline stroke-width='2' stroke='%23ffffff' fill='none' stroke-linecap='round' stroke-linejoin='round' points='1,9 5,13 15,3 '/%3E%3C/svg%3E");
      margin-left: auto;
    }
  }
}

.language-picker__flag { // create the icon flag element
  display: flex;
  align-items: center;

  &::before { // flag icon - hide on default version
    display: none;
    flex-shrink: 0;
    content: '';
    height: 16px;
    width: 16px;
    margin-right: var(--space-xxs);
    // set flag as bg image
    background-repeat: no-repeat;
    background-size: cover;
    background-position: center;
  }

  .language-picker__dropdown &::before { // flag inside dropdown
    margin-right: var(--space-xs);
  }
}

// --flags
.language-picker--flags {
  .language-picker__flag::before { // show flag
    display: inline-block; // flex fallback
    display: inline-flex;
  }

  .language-picker__button .icon:first-of-type {
    display: none; // hide globe icon
  }
}

// set the proper flag image
.language-picker__flag--sv::before {
  background-image: url("https://hatscripts.github.io/circle-flags/flags/se.svg");
}
.language-picker__flag--en::before {
  background-image: url("https://hatscripts.github.io/circle-flags/flags/gb.svg");
}
// --hide-label
.language-picker--hide-label .language-picker__button {// hide language label in custom button -> show only flag and arrow icon
  .icon {
    margin-left: 0;

    &:first-of-type {
      display: none;
    }
  }

  em { // label
    display: none;
  }

  .language-picker__flag::before {
    margin-right: var(--space-xxxs);
  }
}

.language-picker--hide-label .language-picker__flag::before { // show flag
  display: inline-block; // flex fallback
  display: inline-flex;
}